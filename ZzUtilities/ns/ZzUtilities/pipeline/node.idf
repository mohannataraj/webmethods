<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="node_type">interface</value>
  <value name="node_subtype">unknown</value>
  <value name="node_nsName">ZzUtilities.pipeline</value>
  <value name="is_public">false</value>
  <value name="encodeutf8">true</value>
  <value name="shared">cHVibGljIHN0YXRpYyBpbnQgc2Nhbkludm9rZShGbG93RWxlbWVudCBmbG93RWxlbWVudCwgU3Ry
aW5nIHByb2plY3ROYW1lLCBTdHJpbmcgZGltZW5zaW9uTmFtZSwgU3RyaW5nIGRpbWVuc2lvblZh
bHVlLCBTdHJpbmcgdG1mU2VydmljZU5hbWUsIGludCBjb3VudCkgCiB7CglTdHJpbmcgc2Vydmlj
ZVN0ZXBzPSIiOwoJYm9vbGVhbiBkaW1lbnNpb25OYW1lRXhpc3QgPSBmYWxzZTsKCWJvb2xlYW4g
ZGltZW5zaW9uVmFsdWVFeGlzdCA9IGZhbHNlOwoJYm9vbGVhbiBwcm9qZWN0TmFtZUV4aXN0ID0g
ZmFsc2U7Cglib29sZWFuIGlzUHJvamVjdENoZWNrID0gZmFsc2U7CglpbnQgZXhpc3RDb3VudCA9
IGNvdW50OwoKCQoJCgl0cnkgewoJCWlmIChmbG93RWxlbWVudC5nZXRGbG93VHlwZSgpLmVxdWFs
cygiU0VRVUVOQ0UiKSB8fCBmbG93RWxlbWVudC5nZXRGbG93VHlwZSgpLmVxdWFscygiQlJBTkNI
IikgfHwgZmxvd0VsZW1lbnQuZ2V0Rmxvd1R5cGUoKS5lcXVhbHMoIkxPT1AiKXx8IGZsb3dFbGVt
ZW50LmdldEZsb3dUeXBlKCkuZXF1YWxzKCJSRVRSWSIpKSAKCQl7CgkJCWlmKGZsb3dFbGVtZW50
LmdldE5vZGVzKCkhPW51bGwgJiYgZmxvd0VsZW1lbnQuZ2V0Tm9kZXMoKS5sZW5ndGg+MCkKCQkJ
ewoJCQkJZm9yIChGbG93RWxlbWVudCBmbG93RWxlbWVudDIgOiBmbG93RWxlbWVudC5nZXROb2Rl
cygpKQoJCQkJewoJCQkJCXNlcnZpY2VTdGVwcyA9IHNlcnZpY2VTdGVwcyArIGZsb3dFbGVtZW50
Mi5nZXRGbG93VHlwZSgpOwoJCQkJCWV4aXN0Q291bnQgPSBzY2FuSW52b2tlKGZsb3dFbGVtZW50
MiwgcHJvamVjdE5hbWUsZGltZW5zaW9uTmFtZSwgZGltZW5zaW9uVmFsdWUsdG1mU2VydmljZU5h
bWUsIGV4aXN0Q291bnQpOwoJCQkJCgkJCQl9CgkJCX0KCQl9IAoJCWVsc2UgCgkJewkJCQoJCQlp
ZiAoZmxvd0VsZW1lbnQuZ2V0Rmxvd1R5cGUoKS5lcXVhbHMoIk1BUCIpKSAKCQkJewkJCQkJCQoJ
CQkJc2VydmljZVN0ZXBzID0gc2VydmljZVN0ZXBzICsgZmxvd0VsZW1lbnQuZ2V0Rmxvd1R5cGUo
KTsKCQkJCUZsb3dNYXAgZmxvd01hcCA9IChGbG93TWFwKSBmbG93RWxlbWVudDsKCQkJCQoJCQkJ
Rmxvd01hcEludm9rZVtdICBtYXBJbnZva2VzID0gZmxvd01hcC5nZXRJbnZva2VNYXBzKCk7CgkJ
CQlpZihudWxsICE9IG1hcEludm9rZXMgJiYgbWFwSW52b2tlcy5sZW5ndGggPiAwKQoJCQkJewoJ
CQkJCWZvcihGbG93TWFwSW52b2tlIG1hcEludm9rZSA6IGZsb3dNYXAuZ2V0SW52b2tlTWFwcygp
KQoJCQkJCXsKCQkJCQkJZGltZW5zaW9uTmFtZUV4aXN0ID0gZmFsc2U7CgkJCQkJCWRpbWVuc2lv
blZhbHVlRXhpc3QgPSBmYWxzZTsKCQkJCQkJaXNQcm9qZWN0Q2hlY2sgPSBmYWxzZTsKCQkJCQkJ
CQkJCQkJCQoJCQkJCQlpZihtYXBJbnZva2UuZ2V0U2VydmljZSgpLnRvU3RyaW5nKCkuZXF1YWxz
SWdub3JlQ2FzZSh0bWZTZXJ2aWNlTmFtZSkpCgkJCQkJCXsJCQkJCQkJCgkJCQkJCQlmb3IoRmxv
d01hcFNldCAgbWFwU2V0IDogbWFwSW52b2tlLmdldElucHV0TWFwKCkuZ2V0U2V0TWFwcygpKQoJ
CQkJCQkJewkKCQkJCQkJCQlTdHJpbmcgZmllbGROYW1lID0gbWFwU2V0LmdldEZpZWxkKCkuc3Vi
c3RyaW5nKG1hcFNldC5nZXRGaWVsZCgpLmxhc3RJbmRleE9mKCIvIikrMSk7CgkJCQkJCQkJZmll
bGROYW1lID0gZmllbGROYW1lLnN1YnN0cmluZygwLGZpZWxkTmFtZS5pbmRleE9mKCI7IikpOwoJ
CQkJCQkJCQkJCQkJCQkJCgkJCQkJCQkJaWYoZmllbGROYW1lLmVxdWFsc0lnbm9yZUNhc2UoImRp
bWVuc2lvbl9uYW1lIikpCgkJCQkJCQkJewoJCQkJCQkJCQlpZihtYXBTZXQuZ2V0SW5wdXQoKS50
b1N0cmluZygpLmVxdWFsc0lnbm9yZUNhc2UoZGltZW5zaW9uTmFtZSkpCgkJCQkJCQkJCXsKCQkJ
CQkJCQkJCQoJCQkJCQkJCQkJZGltZW5zaW9uTmFtZUV4aXN0ID10cnVlOwoJCQkJCQkJCQl9CgkJ
CQkJCQkJCgkJCQkJCQkJfQoJCQkJCQkJCWlmKGZpZWxkTmFtZS5lcXVhbHNJZ25vcmVDYXNlKCJk
aW1lbnNpb25fdmFsdWUiKSkKCQkJCQkJCQl7CgkJCQkJCQkJCWlmKG1hcFNldC5nZXRJbnB1dCgp
LnRvU3RyaW5nKCkuZXF1YWxzSWdub3JlQ2FzZShkaW1lbnNpb25WYWx1ZSkpCgkJCQkJCQkJCXsK
CQkJCQkJCQkJCQoJCQkJCQkJCQkJZGltZW5zaW9uVmFsdWVFeGlzdCA9dHJ1ZTsKCQkJCQkJCQkJ
fQoJCQkJCQkJCSB9CgkJCQkJCQkJCgkJCQkJCQkJaWYobnVsbCE9IHByb2plY3ROYW1lICYmICFw
cm9qZWN0TmFtZS5lcXVhbHNJZ25vcmVDYXNlKCIiKSApCgkJCQkJCQkJewoJCQkJCQkJCQlpc1By
b2plY3RDaGVjayA9IHRydWU7CgkJCQkJCQkJCWlmKGZpZWxkTmFtZS5lcXVhbHNJZ25vcmVDYXNl
KCJwcm9qZWN0IikpCgkJCQkJCQkJCXsKCQkJCQkJCQkJCWlmKG1hcFNldC5nZXRJbnB1dCgpLnRv
U3RyaW5nKCkuZXF1YWxzSWdub3JlQ2FzZShwcm9qZWN0TmFtZSkpCgkJCQkJCQkJCQl7CgkJCQkJ
CQkJCQkJcHJvamVjdE5hbWVFeGlzdCA9IHRydWU7CgkJCQkJCQkJCQl9CgkJCQkJCQkJCQoJCQkJ
CQkJCQl9CgkJCQkJCQkJfQoJCQkJCQkJfQoJCQkJCQkJCgkJCQkJCQlpZighaXNQcm9qZWN0Q2hl
Y2spCgkJCQkJCQl7CgkJCQkJCQkJaWYoZGltZW5zaW9uTmFtZUV4aXN0ICYmIGRpbWVuc2lvblZh
bHVlRXhpc3QpCgkJCQkJCQkJewoJCQkJCQkJCQlleGlzdENvdW50Kys7CgkJCQkJCQkJfQoJCQkJ
CQkJfQoJCQkJCQkJZWxzZSBpZihpc1Byb2plY3RDaGVjayl7CgkJCQkJCQkJCgkJCQkJCQkJaWYo
ZGltZW5zaW9uTmFtZUV4aXN0ICYmIGRpbWVuc2lvblZhbHVlRXhpc3QgJiYgcHJvamVjdE5hbWVF
eGlzdCkKCQkJCQkJCQl7CgkJCQkJCQkJCWV4aXN0Q291bnQrKzsKCQkJCQkJCQl9CgkJCQkJCQl9
CgkJCQkJCQkKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfQoJCQkJCQkJCgkJCWlmIChmbG93RWxl
bWVudC5nZXRGbG93VHlwZSgpLmVxdWFscygiSU5WT0tFIikpIAoJCQl7CQkJCQkKCQkJCXNlcnZp
Y2VTdGVwcyA9IHNlcnZpY2VTdGVwcyArIGZsb3dFbGVtZW50LmdldEZsb3dUeXBlKCk7CgkJCQlG
bG93SW52b2tlIGZsb3dJbnZva2UgPSAoRmxvd0ludm9rZSkgZmxvd0VsZW1lbnQ7CgkJCQkKCQkJ
CWlmKGZsb3dJbnZva2UuZ2V0U2VydmljZSgpLnRvU3RyaW5nKCkuZXF1YWxzSWdub3JlQ2FzZSh0
bWZTZXJ2aWNlTmFtZSkpCgkJCQl7CQkJCQkJCgkJCQkJaWYoZmxvd0ludm9rZS5nZXRJbnB1dE1h
cCgpLmdldFNldE1hcHMoKSE9bnVsbCAmJiBmbG93SW52b2tlLmdldElucHV0TWFwKCkuZ2V0U2V0
TWFwcygpLmxlbmd0aD4wKQoJCQkJCXsKCQkJCQkJZGltZW5zaW9uTmFtZUV4aXN0ID0gZmFsc2U7
CgkJCQkJCWRpbWVuc2lvblZhbHVlRXhpc3QgPSBmYWxzZTsKCQkJCQkJaXNQcm9qZWN0Q2hlY2sg
PSBmYWxzZTsKCQkJCQkJCgkJCQkJCWZvciAoRmxvd01hcFNldCBpbnZva2VNYXBTZXQgOiBmbG93
SW52b2tlLmdldElucHV0TWFwKCkuZ2V0U2V0TWFwcygpKQoJCQkJCQl7CQkJCQkJCQkKCQkJCQkJ
CVN0cmluZyBmaWVsZE5hbWUgPSBpbnZva2VNYXBTZXQuZ2V0RmllbGQoKS5zdWJzdHJpbmcoaW52
b2tlTWFwU2V0LmdldEZpZWxkKCkubGFzdEluZGV4T2YoIi8iKSsxKTsKCQkJCQkJCWZpZWxkTmFt
ZSA9IGZpZWxkTmFtZS5zdWJzdHJpbmcoMCxmaWVsZE5hbWUuaW5kZXhPZigiOyIpKTsKCQkJCQkJ
CQkJCQkJCQkJCgkJCQkJCQlpZihmaWVsZE5hbWUuZXF1YWxzSWdub3JlQ2FzZSgiZGltZW5zaW9u
X25hbWUiKSkKCQkJCQkJCXsKCQkJCQkJCQlpZihpbnZva2VNYXBTZXQuZ2V0SW5wdXQoKS50b1N0
cmluZygpLmVxdWFsc0lnbm9yZUNhc2UoZGltZW5zaW9uTmFtZSkpCgkJCQkJCQkJewkJCQkJCQkJ
CQkKCQkJCQkJCQkJZGltZW5zaW9uTmFtZUV4aXN0ID10cnVlOwkJCQkJCQkJCQkKCQkJCQkJCQl9
CgkJCQkJCQkKCQkJCQkJCX0KCQkJCQkJCWlmKGZpZWxkTmFtZS5lcXVhbHNJZ25vcmVDYXNlKCJk
aW1lbnNpb25fdmFsdWUiKSkKCQkJCQkJCXsKCQkJCQkJCQlpZihpbnZva2VNYXBTZXQuZ2V0SW5w
dXQoKS50b1N0cmluZygpLmVxdWFsc0lnbm9yZUNhc2UoZGltZW5zaW9uVmFsdWUpKQoJCQkJCQkJ
CXsKCQkJCQkJCQkJZGltZW5zaW9uVmFsdWVFeGlzdCA9IHRydWU7CQkJCQkJCQkJCQoJCQkJCQkJ
CX0JCQkJCQkJCQoJCQkJCQkJfQoJCQkJCQkJCgkJCQkJCQlpZihudWxsIT0gcHJvamVjdE5hbWUg
JiYgIXByb2plY3ROYW1lLmVxdWFsc0lnbm9yZUNhc2UoIiIpICkKCQkJCQkJCXsJCQkJCQkJCQkK
CQkJCQkJCQlpc1Byb2plY3RDaGVjayA9IHRydWU7CQkJCQkJCQkJCgkJCQkJCQkKCQkJCQkJCQlp
ZihmaWVsZE5hbWUuZXF1YWxzSWdub3JlQ2FzZSgicHJvamVjdCIpKQoJCQkJCQkJCXsKCQkJCQkJ
CQkJaWYoaW52b2tlTWFwU2V0LmdldElucHV0KCkudG9TdHJpbmcoKS5lcXVhbHNJZ25vcmVDYXNl
KHByb2plY3ROYW1lKSkKCQkJCQkJCQkJewoJCQkJCQkJCQkJcHJvamVjdE5hbWVFeGlzdCA9IHRy
dWU7CQoJCQkJCQkJCQl9CgkJCQkJCQkJCgkJCQkJCQkJfQoJCQkJCQkJfQoJCQkJCQkJCQkJCgkJ
CQkJCX0KCQkJCQkJCgkJCQkJCWlmKCFpc1Byb2plY3RDaGVjaykKCQkJCQkJewkJCQkJCQkKCQkJ
CQkJCWlmKGRpbWVuc2lvbk5hbWVFeGlzdCAmJiBkaW1lbnNpb25WYWx1ZUV4aXN0KQoJCQkJCQkJ
ewkJCQkJCQkJCQoJCQkJCQkJCWV4aXN0Q291bnQrKzsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCQll
bHNlIGlmKGlzUHJvamVjdENoZWNrKXsKCQkJCQkJCQoJCQkJCQkJaWYoZGltZW5zaW9uTmFtZUV4
aXN0ICYmIGRpbWVuc2lvblZhbHVlRXhpc3QgJiYgcHJvamVjdE5hbWVFeGlzdCkKCQkJCQkJCXsJ
CQkJCQkJCQkKCQkJCQkJCQlleGlzdENvdW50Kys7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQkJCgkJ
CQkJfQoJCQkJfQoJCQkJCgkJCX0JCQkJCQkKCQl9Cgl9IGNhdGNoIChFeGNlcHRpb24gZSkgewoJ
CUpvdXJuYWxMb2dnZXIubG9nKDMsIDkwLCAzLCBlLnRvU3RyaW5nKCkpOwoJCWUucHJpbnRTdGFj
a1RyYWNlKCk7Cgl9CgkKCQoJcmV0dXJuIGV4aXN0Q291bnQ7Cn0=</value>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
  <array name="imports" type="value" depth="1">
    <value>com.wm.app.b2b.server.FlowSvcImpl</value>
    <value>com.wm.app.b2b.server.ns.Namespace</value>
    <value>com.sun.org.apache.xerces.internal.xs.StringList</value>
    <value>com.wm.util.JournalLogger</value>
    <value>java.text.ParseException</value>
    <value>java.text.SimpleDateFormat</value>
    <value>java.util.ArrayList</value>
    <value>java.util.Collections</value>
    <value>java.util.Date</value>
    <value>java.util.HashSet</value>
    <value>java.util.Map</value>
    <value>java.util.Set</value>
    <value>java.util.TreeMap</value>
    <value>java.util.Iterator</value>
    <value>com.wm.data.IData</value>
    <value>com.wm.data.IDataCursor</value>
    <value>com.wm.data.IDataUtil</value>
    <value>com.wm.lang.flow.FlowElement</value>
    <value>com.wm.lang.flow.FlowInvoke</value>
    <value>com.wm.lang.flow.FlowMap</value>
    <value>com.wm.lang.flow.FlowMapInvoke</value>
    <value>com.wm.lang.flow.FlowMapSet</value>
    <value>com.wm.lang.flow.FlowRoot</value>
    <value>com.wm.lang.ns.NSNode</value>
  </array>
</Values>
